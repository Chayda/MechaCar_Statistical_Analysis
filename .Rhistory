library(tidyverse)
?lm()
lm(qsefc ~ hp,mtcars) #create linear model
lm(qsec ~ hp,mtcars)
summary(lm(qsec ~ hp,mtcars)) #summarize linear model
model <- lm(qsec ~ hp,mtcars) #create linear model
yvals <- model$coefficients['hp']*mtcars$hp +
model$coefficients['(Intercept)'] #determine y-axis values from linear model
plt <- ggplot(mtcars,aes(x=hp,y=qsec)) #import dataset into ggplot2
plt + geom_point() + geom_line(aes(y=yvals),color = "red") #plot scatter
lm(qsec ~ mpg + disp + drat + wt + hp,data=mtcars) #generate multiple linear regression
summary(lm(qsec ~ mpg + disp + drat + wt + hp,data=mtcars))
?chisq.test()
table(mpg$class,mpg$year) #generate contingency table
tbl <- table(mpg$class,mpg$year) #generate contingency table
chisq.test(tbl) #compare categorical distribution
setwd("C:/Users/chayd/python_uoft/MechaCar_Statistical_Analysis")
setwd("C:/Users/chayd/python_uoft/MechaCar_Statistical_Analysis")
library(tidyverse)
library(jsonlite)
mpg_data <- read.csv("MechaCar_mpg.csv") #read in data file
lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD,data=mpg_data) #create linear model
summary(lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD,data=mpg_data)) #generate summary statistics
mpg_data <- read.csv("MechaCar_mpg.csv",check.names=F,stringsAsFactors = F) #read in data file
lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD,data=mpg_data) #create linear model
summary(lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD,data=mpg_data)) #generate summary statistics
